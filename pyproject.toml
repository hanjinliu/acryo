[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "acryo"
dynamic = ["version"]
description = "An extensible cryo-EM/ET toolkit for Python."
classifiers = [
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
readme = "README.md"
license = { file = "LICENSE" }
requires-python = ">=3.9"
authors = [
    { name = "Hanjin Liu", email = "liuhanjin-sc@g.ecc.u-tokyo.ac.jp" },
]
dependencies = [
    "dask>=2021.6.0",
    "numpy>=1.21",
    "polars>=0.19.19,!=0.20.23",
    "scipy>=1.11.1",
    "typing_extensions>=4.1.1",
]

[tool.hatch.version]
path = "acryo/__init__.py"

[tool.hatch.build.targets.sdist]
include = [
    "/acryo",
]

[project.optional-dependencies]
testing = [
    "pytest",
    "pytest-cov",
    "scikit-learn",
    "tifffile",
    "mrcfile>=1.5.3"
]

[tool.pytest.ini_options]
filterwarnings = [
]

[tool.hatch.envs.test]
features = ["testing"]

[tool.hatch.envs.test.scripts]
run = "pytest -v"

[tool.coverage.run]
source = ["acryo"]
branch = true
parallel = true

[tool.coverage.paths]
cylindra = ["acryo/"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "if TYPE_CHECKING:",
    'if __name__ == "__main__":',
    'def __repr__(self)',
    "@overload",
    "except ImportError",
    "except ImportError*",
    "except PackageNotFoundError",
    "raise NotImplementedError",
    "pass",
]
